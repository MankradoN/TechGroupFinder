{"ast":null,"code":"export default function buildResponseAdapterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const additionalFacetValueFields = Object.entries(config.facets || {}).reduce((acc, _ref) => {\n    let [fieldName, facetConfig] = _ref;\n\n    if (facetConfig.unit && facetConfig.center) {\n      return Object.assign(Object.assign({}, acc || {}), {\n        [fieldName]: Object.assign(Object.assign({}, facetConfig.unit && {\n          unit: facetConfig.unit\n        }), facetConfig.center && {\n          center: facetConfig.center\n        })\n      });\n    }\n\n    return acc;\n  }, null);\n  return Object.assign({}, additionalFacetValueFields && {\n    additionalFacetValueFields\n  });\n}","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/my-app/node_modules/@elastic/search-ui-app-search-connector/lib/esm/buildResponseAdapterOptions.js"],"names":["buildResponseAdapterOptions","config","additionalFacetValueFields","Object","entries","facets","reduce","acc","fieldName","facetConfig","unit","center","assign"],"mappings":"AAAA,eAAe,SAASA,2BAAT,GAAkD;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC7D,QAAMC,0BAA0B,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAM,CAACI,MAAP,IAAiB,EAAhC,EAAoCC,MAApC,CAA2C,CAACC,GAAD,WAAmC;AAAA,QAA7B,CAACC,SAAD,EAAYC,WAAZ,CAA6B;;AAC7G,QAAIA,WAAW,CAACC,IAAZ,IAAoBD,WAAW,CAACE,MAApC,EAA4C;AACxC,aAAOR,MAAM,CAACS,MAAP,CAAcT,MAAM,CAACS,MAAP,CAAc,EAAd,EAAmBL,GAAG,IAAI,EAA1B,CAAd,EAA8C;AAAE,SAACC,SAAD,GAAaL,MAAM,CAACS,MAAP,CAAcT,MAAM,CAACS,MAAP,CAAc,EAAd,EAAmBH,WAAW,CAACC,IAAZ,IAAoB;AAAEA,UAAAA,IAAI,EAAED,WAAW,CAACC;AAApB,SAAvC,CAAd,EAAoFD,WAAW,CAACE,MAAZ,IAAsB;AAAEA,UAAAA,MAAM,EAAEF,WAAW,CAACE;AAAtB,SAA1G;AAAf,OAA9C,CAAP;AACH;;AACD,WAAOJ,GAAP;AACH,GALkC,EAKhC,IALgC,CAAnC;AAMA,SAAOJ,MAAM,CAACS,MAAP,CAAc,EAAd,EAAmBV,0BAA0B,IAAI;AAAEA,IAAAA;AAAF,GAAjD,CAAP;AACH","sourcesContent":["export default function buildResponseAdapterOptions(config = {}) {\n    const additionalFacetValueFields = Object.entries(config.facets || {}).reduce((acc, [fieldName, facetConfig]) => {\n        if (facetConfig.unit && facetConfig.center) {\n            return Object.assign(Object.assign({}, (acc || {})), { [fieldName]: Object.assign(Object.assign({}, (facetConfig.unit && { unit: facetConfig.unit })), (facetConfig.center && { center: facetConfig.center })) });\n        }\n        return acc;\n    }, null);\n    return Object.assign({}, (additionalFacetValueFields && { additionalFacetValueFields }));\n}\n"]},"metadata":{},"sourceType":"module"}