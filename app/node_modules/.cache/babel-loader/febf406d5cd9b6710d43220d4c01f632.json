{"ast":null,"code":"/**\n * This helper creates a live region that announces the results of certain\n * actions (e.g. searching, paging, etc.), that are otherwise invisible\n * to screen reader users.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\n */\nconst regionId = \"search-ui-screen-reader-notifications\";\nconst hasDOM = typeof document !== \"undefined\"; // Prevent errors in SSR apps\n\nconst getLiveRegion = () => {\n  if (!hasDOM) return null;\n  let region = document.getElementById(regionId);\n  if (region) return region;\n  region = document.createElement(\"div\");\n  region.id = regionId;\n  region.setAttribute(\"role\", \"status\");\n  region.setAttribute(\"aria-live\", \"polite\");\n  /**\n   * Visually-hidden CSS that's still available to screen readers.\n   * We're avoiding putting this in a stylesheet to ensure that this\n   * still works for users that opt for custom views & CSS. We're\n   * also opting to use CSSOM instead of inline styles to avoid\n   * Content Security Policy warnings.\n   *\n   * @see https://accessibility.18f.gov/hidden-content/\n   */\n\n  region.style.position = \"absolute\";\n  region.style.width = \"1px\";\n  region.style.height = \"1px\";\n  region.style.margin = \"-1px\";\n  region.style.padding = \"0\";\n  region.style.border = \"0\";\n  region.style.overflow = \"hidden\";\n  region.style.clip = \"rect(0 0 0 0)\";\n  document.body.appendChild(region);\n  return region;\n};\n\nconst announceToScreenReader = announcement => {\n  const region = getLiveRegion();\n  if (!region) return;\n  region.textContent = announcement;\n};\n\nconst defaultMessages = {\n  searchResults: _ref => {\n    let {\n      start,\n      end,\n      totalResults,\n      searchTerm\n    } = _ref;\n    let message = `Showing ${start} to ${end} results out of ${totalResults}`;\n    if (searchTerm) message += `, searching for \"${searchTerm}\".`;\n    return message;\n  }\n};\nexport { getLiveRegion, announceToScreenReader, defaultMessages };","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/node_modules/@elastic/search-ui/lib/esm/A11yNotifications.js"],"names":["regionId","hasDOM","document","getLiveRegion","region","getElementById","createElement","id","setAttribute","style","position","width","height","margin","padding","border","overflow","clip","body","appendChild","announceToScreenReader","announcement","textContent","defaultMessages","searchResults","start","end","totalResults","searchTerm","message"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,uCAAjB;AACA,MAAMC,MAAM,GAAG,OAAOC,QAAP,KAAoB,WAAnC,C,CAAgD;;AAChD,MAAMC,aAAa,GAAG,MAAM;AACxB,MAAI,CAACF,MAAL,EACI,OAAO,IAAP;AACJ,MAAIG,MAAM,GAAGF,QAAQ,CAACG,cAAT,CAAwBL,QAAxB,CAAb;AACA,MAAII,MAAJ,EACI,OAAOA,MAAP;AACJA,EAAAA,MAAM,GAAGF,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAT;AACAF,EAAAA,MAAM,CAACG,EAAP,GAAYP,QAAZ;AACAI,EAAAA,MAAM,CAACI,YAAP,CAAoB,MAApB,EAA4B,QAA5B;AACAJ,EAAAA,MAAM,CAACI,YAAP,CAAoB,WAApB,EAAiC,QAAjC;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIJ,EAAAA,MAAM,CAACK,KAAP,CAAaC,QAAb,GAAwB,UAAxB;AACAN,EAAAA,MAAM,CAACK,KAAP,CAAaE,KAAb,GAAqB,KAArB;AACAP,EAAAA,MAAM,CAACK,KAAP,CAAaG,MAAb,GAAsB,KAAtB;AACAR,EAAAA,MAAM,CAACK,KAAP,CAAaI,MAAb,GAAsB,MAAtB;AACAT,EAAAA,MAAM,CAACK,KAAP,CAAaK,OAAb,GAAuB,GAAvB;AACAV,EAAAA,MAAM,CAACK,KAAP,CAAaM,MAAb,GAAsB,GAAtB;AACAX,EAAAA,MAAM,CAACK,KAAP,CAAaO,QAAb,GAAwB,QAAxB;AACAZ,EAAAA,MAAM,CAACK,KAAP,CAAaQ,IAAb,GAAoB,eAApB;AACAf,EAAAA,QAAQ,CAACgB,IAAT,CAAcC,WAAd,CAA0Bf,MAA1B;AACA,SAAOA,MAAP;AACH,CA7BD;;AA8BA,MAAMgB,sBAAsB,GAAIC,YAAD,IAAkB;AAC7C,QAAMjB,MAAM,GAAGD,aAAa,EAA5B;AACA,MAAI,CAACC,MAAL,EACI;AACJA,EAAAA,MAAM,CAACkB,WAAP,GAAqBD,YAArB;AACH,CALD;;AAMA,MAAME,eAAe,GAAG;AACpBC,EAAAA,aAAa,EAAE,QAA8C;AAAA,QAA7C;AAAEC,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAcC,MAAAA,YAAd;AAA4BC,MAAAA;AAA5B,KAA6C;AACzD,QAAIC,OAAO,GAAI,WAAUJ,KAAM,OAAMC,GAAI,mBAAkBC,YAAa,EAAxE;AACA,QAAIC,UAAJ,EACIC,OAAO,IAAK,oBAAmBD,UAAW,IAA1C;AACJ,WAAOC,OAAP;AACH;AANmB,CAAxB;AAQA,SAAS1B,aAAT,EAAwBiB,sBAAxB,EAAgDG,eAAhD","sourcesContent":["/**\n * This helper creates a live region that announces the results of certain\n * actions (e.g. searching, paging, etc.), that are otherwise invisible\n * to screen reader users.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\n */\nconst regionId = \"search-ui-screen-reader-notifications\";\nconst hasDOM = typeof document !== \"undefined\"; // Prevent errors in SSR apps\nconst getLiveRegion = () => {\n    if (!hasDOM)\n        return null;\n    let region = document.getElementById(regionId);\n    if (region)\n        return region;\n    region = document.createElement(\"div\");\n    region.id = regionId;\n    region.setAttribute(\"role\", \"status\");\n    region.setAttribute(\"aria-live\", \"polite\");\n    /**\n     * Visually-hidden CSS that's still available to screen readers.\n     * We're avoiding putting this in a stylesheet to ensure that this\n     * still works for users that opt for custom views & CSS. We're\n     * also opting to use CSSOM instead of inline styles to avoid\n     * Content Security Policy warnings.\n     *\n     * @see https://accessibility.18f.gov/hidden-content/\n     */\n    region.style.position = \"absolute\";\n    region.style.width = \"1px\";\n    region.style.height = \"1px\";\n    region.style.margin = \"-1px\";\n    region.style.padding = \"0\";\n    region.style.border = \"0\";\n    region.style.overflow = \"hidden\";\n    region.style.clip = \"rect(0 0 0 0)\";\n    document.body.appendChild(region);\n    return region;\n};\nconst announceToScreenReader = (announcement) => {\n    const region = getLiveRegion();\n    if (!region)\n        return;\n    region.textContent = announcement;\n};\nconst defaultMessages = {\n    searchResults: ({ start, end, totalResults, searchTerm }) => {\n        let message = `Showing ${start} to ${end} results out of ${totalResults}`;\n        if (searchTerm)\n            message += `, searching for \"${searchTerm}\".`;\n        return message;\n    }\n};\nexport { getLiveRegion, announceToScreenReader, defaultMessages };\n"]},"metadata":{},"sourceType":"module"}