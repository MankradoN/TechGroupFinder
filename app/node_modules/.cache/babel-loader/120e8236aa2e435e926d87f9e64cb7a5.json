{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { MultiCheckboxFacet } from \"@elastic/react-search-ui-views\";\nimport { helpers } from \"@elastic/search-ui\";\nimport { accentFold } from \"../helpers\";\nimport { withSearch } from \"..\";\nconst {\n  markSelectedFacetValuesFromFilters\n} = helpers;\nexport class FacetContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickMore = totalOptions => {\n      this.setState(_ref => {\n        let {\n          more\n        } = _ref;\n        let visibleOptionsCount = more + 10;\n        const showingAll = visibleOptionsCount >= totalOptions;\n        if (showingAll) visibleOptionsCount = totalOptions;\n        this.props.a11yNotify(\"moreFilters\", {\n          visibleOptionsCount,\n          showingAll\n        });\n        return {\n          more: visibleOptionsCount\n        };\n      });\n    };\n\n    this.handleFacetSearch = searchTerm => {\n      this.setState({\n        searchTerm\n      });\n    };\n\n    this.state = {\n      more: props.show,\n      searchTerm: \"\"\n    };\n  }\n\n  render() {\n    const {\n      more,\n      searchTerm\n    } = this.state;\n\n    const _a = this.props,\n          {\n      addFilter,\n      className,\n      facets,\n      field,\n      filterType,\n      filters,\n      label,\n      removeFilter,\n      setFilter,\n      view,\n      isFilterable,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      a11yNotify\n    } = _a,\n          rest = __rest(_a, [\"addFilter\", \"className\", \"facets\", \"field\", \"filterType\", \"filters\", \"label\", \"removeFilter\", \"setFilter\", \"view\", \"isFilterable\", \"a11yNotify\"]);\n\n    const facetsForField = facets[field];\n    if (!facetsForField) return null; // By using `[0]`, we are currently assuming only 1 facet per field. This will likely be enforced\n    // in future version, so instead of an array, there will only be one facet allowed per field.\n\n    const facet = facetsForField[0];\n    let facetValues = markSelectedFacetValuesFromFilters(facet, filters, field, filterType).data;\n    const selectedValues = facetValues.filter(fv => fv.selected).map(fv => fv.value);\n    if (!facetValues.length && !selectedValues.length) return null;\n\n    if (searchTerm.trim()) {\n      facetValues = facetValues.filter(option => accentFold(option.value).toLowerCase().includes(accentFold(searchTerm).toLowerCase()));\n    }\n\n    const View = view || MultiCheckboxFacet;\n    const viewProps = Object.assign({\n      className,\n      label: label,\n      onMoreClick: this.handleClickMore.bind(this, facetValues.length),\n      onRemove: value => {\n        removeFilter(field, value, filterType);\n      },\n      onChange: value => {\n        setFilter(field, value, filterType);\n      },\n      onSelect: value => {\n        addFilter(field, value, filterType);\n      },\n      options: facetValues.slice(0, more),\n      showMore: facetValues.length > more,\n      values: selectedValues,\n      showSearch: isFilterable,\n      onSearch: value => {\n        this.handleFacetSearch(value);\n      },\n      searchPlaceholder: `Filter ${label}`\n    }, rest);\n    return React.createElement(View, Object.assign({}, viewProps));\n  }\n\n}\nFacetContainer.defaultProps = {\n  filterType: \"all\",\n  isFilterable: false,\n  show: 5\n};\nexport default withSearch(_ref2 => {\n  let {\n    filters,\n    facets,\n    addFilter,\n    removeFilter,\n    setFilter,\n    a11yNotify\n  } = _ref2;\n  return {\n    filters,\n    facets,\n    addFilter,\n    removeFilter,\n    setFilter,\n    a11yNotify\n  };\n})(FacetContainer);","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/node_modules/@elastic/react-search-ui/lib/esm/containers/Facet.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Component","MultiCheckboxFacet","helpers","accentFold","withSearch","markSelectedFacetValuesFromFilters","FacetContainer","constructor","props","handleClickMore","totalOptions","setState","more","visibleOptionsCount","showingAll","a11yNotify","handleFacetSearch","searchTerm","state","show","render","_a","addFilter","className","facets","field","filterType","filters","label","removeFilter","setFilter","view","isFilterable","rest","facetsForField","facet","facetValues","data","selectedValues","filter","fv","selected","map","value","trim","option","toLowerCase","includes","View","viewProps","assign","onMoreClick","bind","onRemove","onChange","onSelect","options","slice","showMore","values","showSearch","onSearch","searchPlaceholder","createElement","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { MultiCheckboxFacet } from \"@elastic/react-search-ui-views\";\nimport { helpers } from \"@elastic/search-ui\";\nimport { accentFold } from \"../helpers\";\nimport { withSearch } from \"..\";\nconst { markSelectedFacetValuesFromFilters } = helpers;\nexport class FacetContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClickMore = (totalOptions) => {\n            this.setState(({ more }) => {\n                let visibleOptionsCount = more + 10;\n                const showingAll = visibleOptionsCount >= totalOptions;\n                if (showingAll)\n                    visibleOptionsCount = totalOptions;\n                this.props.a11yNotify(\"moreFilters\", { visibleOptionsCount, showingAll });\n                return { more: visibleOptionsCount };\n            });\n        };\n        this.handleFacetSearch = (searchTerm) => {\n            this.setState({ searchTerm });\n        };\n        this.state = {\n            more: props.show,\n            searchTerm: \"\"\n        };\n    }\n    render() {\n        const { more, searchTerm } = this.state;\n        const _a = this.props, { addFilter, className, facets, field, filterType, filters, label, removeFilter, setFilter, view, isFilterable, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        a11yNotify } = _a, rest = __rest(_a, [\"addFilter\", \"className\", \"facets\", \"field\", \"filterType\", \"filters\", \"label\", \"removeFilter\", \"setFilter\", \"view\", \"isFilterable\", \"a11yNotify\"]);\n        const facetsForField = facets[field];\n        if (!facetsForField)\n            return null;\n        // By using `[0]`, we are currently assuming only 1 facet per field. This will likely be enforced\n        // in future version, so instead of an array, there will only be one facet allowed per field.\n        const facet = facetsForField[0];\n        let facetValues = markSelectedFacetValuesFromFilters(facet, filters, field, filterType).data;\n        const selectedValues = facetValues\n            .filter((fv) => fv.selected)\n            .map((fv) => fv.value);\n        if (!facetValues.length && !selectedValues.length)\n            return null;\n        if (searchTerm.trim()) {\n            facetValues = facetValues.filter((option) => accentFold(option.value)\n                .toLowerCase()\n                .includes(accentFold(searchTerm).toLowerCase()));\n        }\n        const View = view || MultiCheckboxFacet;\n        const viewProps = Object.assign({ className, label: label, onMoreClick: this.handleClickMore.bind(this, facetValues.length), onRemove: (value) => {\n                removeFilter(field, value, filterType);\n            }, onChange: (value) => {\n                setFilter(field, value, filterType);\n            }, onSelect: (value) => {\n                addFilter(field, value, filterType);\n            }, options: facetValues.slice(0, more), showMore: facetValues.length > more, values: selectedValues, showSearch: isFilterable, onSearch: (value) => {\n                this.handleFacetSearch(value);\n            }, searchPlaceholder: `Filter ${label}` }, rest);\n        return React.createElement(View, Object.assign({}, viewProps));\n    }\n}\nFacetContainer.defaultProps = {\n    filterType: \"all\",\n    isFilterable: false,\n    show: 5\n};\nexport default withSearch(({ filters, facets, addFilter, removeFilter, setFilter, a11yNotify }) => ({\n    filters,\n    facets,\n    addFilter,\n    removeFilter,\n    setFilter,\n    a11yNotify\n}))(FacetContainer);\n"]},"metadata":{},"sourceType":"module"}