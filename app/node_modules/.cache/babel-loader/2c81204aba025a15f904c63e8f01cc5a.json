{"ast":null,"code":"import { removeSingleFilterValue } from \"../helpers\";\n/**\n * Remove filter from results\n *\n * Will trigger new search\n *\n * @param name String field name for filter to remove\n * @param value String (Optional) field value for filter to remove\n * @param type String (Optional) type of filter to remove\n */\n\nexport default function removeFilter(name, value, type) {\n  if (this.debug) // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"removeFilter\", ...arguments);\n  const {\n    filters\n  } = this.state;\n  let updatedFilters = filters;\n\n  if (!value && type) {\n    updatedFilters = filters.filter(filter => !(filter.field === name && filter.type === type));\n  } else if (value) {\n    updatedFilters = removeSingleFilterValue(filters, name, value, type);\n  } else {\n    updatedFilters = filters.filter(filter => filter.field !== name);\n  }\n\n  this._updateSearchResults({\n    current: 1,\n    filters: updatedFilters\n  });\n}","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/my-app/node_modules/@elastic/search-ui/lib/esm/actions/removeFilter.js"],"names":["removeSingleFilterValue","removeFilter","name","value","type","debug","console","log","arguments","filters","state","updatedFilters","filter","field","_updateSearchResults","current"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,YAAxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACpD,MAAI,KAAKC,KAAT,EACI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,cAAjC,EAAiD,GAAGC,SAApD;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAc,KAAKC,KAAzB;AACA,MAAIC,cAAc,GAAGF,OAArB;;AACA,MAAI,CAACN,KAAD,IAAUC,IAAd,EAAoB;AAChBO,IAAAA,cAAc,GAAGF,OAAO,CAACG,MAAR,CAAgBA,MAAD,IAAY,EAAEA,MAAM,CAACC,KAAP,KAAiBX,IAAjB,IAAyBU,MAAM,CAACR,IAAP,KAAgBA,IAA3C,CAA3B,CAAjB;AACH,GAFD,MAGK,IAAID,KAAJ,EAAW;AACZQ,IAAAA,cAAc,GAAGX,uBAAuB,CAACS,OAAD,EAAUP,IAAV,EAAgBC,KAAhB,EAAuBC,IAAvB,CAAxC;AACH,GAFI,MAGA;AACDO,IAAAA,cAAc,GAAGF,OAAO,CAACG,MAAR,CAAgBA,MAAD,IAAYA,MAAM,CAACC,KAAP,KAAiBX,IAA5C,CAAjB;AACH;;AACD,OAAKY,oBAAL,CAA0B;AACtBC,IAAAA,OAAO,EAAE,CADa;AAEtBN,IAAAA,OAAO,EAAEE;AAFa,GAA1B;AAIH","sourcesContent":["import { removeSingleFilterValue } from \"../helpers\";\n/**\n * Remove filter from results\n *\n * Will trigger new search\n *\n * @param name String field name for filter to remove\n * @param value String (Optional) field value for filter to remove\n * @param type String (Optional) type of filter to remove\n */\nexport default function removeFilter(name, value, type) {\n    if (this.debug)\n        // eslint-disable-next-line no-console\n        console.log(\"Search UI: Action\", \"removeFilter\", ...arguments);\n    const { filters } = this.state;\n    let updatedFilters = filters;\n    if (!value && type) {\n        updatedFilters = filters.filter((filter) => !(filter.field === name && filter.type === type));\n    }\n    else if (value) {\n        updatedFilters = removeSingleFilterValue(filters, name, value, type);\n    }\n    else {\n        updatedFilters = filters.filter((filter) => filter.field !== name);\n    }\n    this._updateSearchResults({\n        current: 1,\n        filters: updatedFilters\n    });\n}\n"]},"metadata":{},"sourceType":"module"}