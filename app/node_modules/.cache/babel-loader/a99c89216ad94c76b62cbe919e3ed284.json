{"ast":null,"code":"import React from \"react\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\n\nfunction MultiCheckboxFacet(_ref) {\n  let {\n    className,\n    label,\n    onMoreClick,\n    onRemove,\n    onSelect,\n    options,\n    showMore,\n    showSearch,\n    onSearch,\n    searchPlaceholder\n  } = _ref;\n  return React.createElement(\"fieldset\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, React.createElement(\"legend\", {\n    className: \"sui-facet__title\"\n  }, label), showSearch && React.createElement(\"div\", {\n    className: \"sui-facet-search\"\n  }, React.createElement(\"input\", {\n    className: \"sui-facet-search__text-input\",\n    type: \"search\",\n    placeholder: searchPlaceholder || \"Search\",\n    onChange: e => {\n      onSearch(e.target.value);\n    }\n  })), React.createElement(\"div\", {\n    className: \"sui-multi-checkbox-facet\"\n  }, options.length < 1 && React.createElement(\"div\", null, \"No matching options\"), options.map(option => {\n    const checked = option.selected;\n    const value = option.value;\n    return React.createElement(\"label\", {\n      key: `${getFilterValueDisplay(option.value)}`,\n      htmlFor: `example_facet_${label}${getFilterValueDisplay(option.value)}`,\n      className: \"sui-multi-checkbox-facet__option-label\"\n    }, React.createElement(\"div\", {\n      className: \"sui-multi-checkbox-facet__option-input-wrapper\"\n    }, React.createElement(\"input\", {\n      \"data-transaction-name\": `facet - ${label}`,\n      id: `example_facet_${label}${getFilterValueDisplay(option.value)}`,\n      type: \"checkbox\",\n      className: \"sui-multi-checkbox-facet__checkbox\",\n      checked: checked,\n      onChange: () => checked ? onRemove(value) : onSelect(value)\n    }), React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__input-text\"\n    }, getFilterValueDisplay(option.value))), React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__option-count\"\n    }, option.count.toLocaleString(\"en\")));\n  })), showMore && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"sui-facet-view-more\",\n    onClick: onMoreClick,\n    \"aria-label\": \"Show more options\"\n  }, \"+ More\"));\n}\n\nexport default MultiCheckboxFacet;","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/my-app/node_modules/@elastic/react-search-ui-views/lib/esm/MultiCheckboxFacet.js"],"names":["React","appendClassName","getFilterValueDisplay","MultiCheckboxFacet","className","label","onMoreClick","onRemove","onSelect","options","showMore","showSearch","onSearch","searchPlaceholder","createElement","type","placeholder","onChange","e","target","value","length","map","option","checked","selected","key","htmlFor","id","count","toLocaleString","onClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\nfunction MultiCheckboxFacet({ className, label, onMoreClick, onRemove, onSelect, options, showMore, showSearch, onSearch, searchPlaceholder }) {\n    return (React.createElement(\"fieldset\", { className: appendClassName(\"sui-facet\", className) },\n        React.createElement(\"legend\", { className: \"sui-facet__title\" }, label),\n        showSearch && (React.createElement(\"div\", { className: \"sui-facet-search\" },\n            React.createElement(\"input\", { className: \"sui-facet-search__text-input\", type: \"search\", placeholder: searchPlaceholder || \"Search\", onChange: (e) => {\n                    onSearch(e.target.value);\n                } }))),\n        React.createElement(\"div\", { className: \"sui-multi-checkbox-facet\" },\n            options.length < 1 && React.createElement(\"div\", null, \"No matching options\"),\n            options.map((option) => {\n                const checked = option.selected;\n                const value = option.value;\n                return (React.createElement(\"label\", { key: `${getFilterValueDisplay(option.value)}`, htmlFor: `example_facet_${label}${getFilterValueDisplay(option.value)}`, className: \"sui-multi-checkbox-facet__option-label\" },\n                    React.createElement(\"div\", { className: \"sui-multi-checkbox-facet__option-input-wrapper\" },\n                        React.createElement(\"input\", { \"data-transaction-name\": `facet - ${label}`, id: `example_facet_${label}${getFilterValueDisplay(option.value)}`, type: \"checkbox\", className: \"sui-multi-checkbox-facet__checkbox\", checked: checked, onChange: () => (checked ? onRemove(value) : onSelect(value)) }),\n                        React.createElement(\"span\", { className: \"sui-multi-checkbox-facet__input-text\" }, getFilterValueDisplay(option.value))),\n                    React.createElement(\"span\", { className: \"sui-multi-checkbox-facet__option-count\" }, option.count.toLocaleString(\"en\"))));\n            })),\n        showMore && (React.createElement(\"button\", { type: \"button\", className: \"sui-facet-view-more\", onClick: onMoreClick, \"aria-label\": \"Show more options\" }, \"+ More\"))));\n}\nexport default MultiCheckboxFacet;\n"]},"metadata":{},"sourceType":"module"}