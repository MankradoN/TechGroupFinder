{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport Downshift from \"downshift\";\nimport { appendClassName } from \"./view-helpers\";\nimport Autocomplete from \"./Autocomplete\";\nimport SearchInput from \"./SearchInput\";\n\nfunction SearchBox(props) {\n  const {\n    className,\n    allAutocompletedItemsCount,\n    autocompleteView,\n    isFocused,\n    inputProps = {\n      className: \"\"\n    },\n    inputView,\n    onChange,\n    onSelectAutocomplete,\n    onSubmit,\n    useAutocomplete,\n    value,\n    // NOTE: These are explicitly de-structured but not used so that they are\n    // not passed through to the input with the 'rest' parameter\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedResults,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedSuggestions,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedSuggestionsCount,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    completeSuggestion,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    notifyAutocompleteSelected\n  } = props,\n        rest = __rest(props, [\"className\", \"allAutocompletedItemsCount\", \"autocompleteView\", \"isFocused\", \"inputProps\", \"inputView\", \"onChange\", \"onSelectAutocomplete\", \"onSubmit\", \"useAutocomplete\", \"value\", \"autocompletedResults\", \"autocompletedSuggestions\", \"autocompletedSuggestionsCount\", \"completeSuggestion\", \"notifyAutocompleteSelected\"]);\n\n  const focusedClass = isFocused ? \"focus\" : \"\";\n  const AutocompleteView = autocompleteView || Autocomplete;\n  const InputView = inputView || SearchInput;\n  return React.createElement(Downshift, Object.assign({\n    inputValue: value,\n    onChange: onSelectAutocomplete,\n    onInputValueChange: newValue => {\n      // To avoid over dispatching\n      if (value === newValue) return;\n      onChange(newValue);\n    },\n    // Because when a selection is made, we don't really want to change\n    // the inputValue. This is supposed to be a \"controlled\" value, and when\n    // this happens we lose control of it.\n    itemToString: () => value\n  }, rest), downshiftProps => {\n    const {\n      closeMenu,\n      getInputProps,\n      isOpen\n    } = downshiftProps;\n    const autocompleteClass = isOpen === true ? \" autocomplete\" : \"\";\n    return React.createElement(\"form\", {\n      onSubmit: e => {\n        closeMenu();\n        onSubmit(e);\n      }\n    }, React.createElement(\"div\", {\n      className: appendClassName(\"sui-search-box\", className) + autocompleteClass\n    }, React.createElement(InputView, Object.assign({}, downshiftProps, {\n      getInputProps: additionalProps => {\n        const _a = additionalProps || {},\n              {\n          className\n        } = _a,\n              rest = __rest(_a, [\"className\"]);\n\n        return getInputProps(Object.assign(Object.assign(Object.assign({\n          \"data-transaction-name\": \"search input\",\n          placeholder: \"Search\"\n        }, inputProps), {\n          className: appendClassName(\"sui-search-box__text-input\", [inputProps.className, className, focusedClass])\n        }), rest));\n      },\n      getButtonProps: additionalProps => {\n        const _a = additionalProps || {},\n              {\n          className\n        } = _a,\n              rest = __rest(_a, [\"className\"]);\n\n        return Object.assign({\n          \"data-transaction-name\": \"search submit\",\n          type: \"submit\",\n          value: \"Search\",\n          className: appendClassName(\"button sui-search-box__submit\", className)\n        }, rest);\n      },\n      getAutocomplete: () => {\n        if (useAutocomplete && isOpen && allAutocompletedItemsCount > 0) {\n          return React.createElement(AutocompleteView, Object.assign({}, props, downshiftProps));\n        } else {\n          return null;\n        }\n      }\n    }))));\n  });\n}\n\nexport default SearchBox;","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/my-app/node_modules/@elastic/react-search-ui-views/lib/esm/SearchBox.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Downshift","appendClassName","Autocomplete","SearchInput","SearchBox","props","className","allAutocompletedItemsCount","autocompleteView","isFocused","inputProps","inputView","onChange","onSelectAutocomplete","onSubmit","useAutocomplete","value","autocompletedResults","autocompletedSuggestions","autocompletedSuggestionsCount","completeSuggestion","notifyAutocompleteSelected","rest","focusedClass","AutocompleteView","InputView","createElement","assign","inputValue","onInputValueChange","newValue","itemToString","downshiftProps","closeMenu","getInputProps","isOpen","autocompleteClass","additionalProps","_a","placeholder","getButtonProps","type","getAutocomplete"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport Downshift from \"downshift\";\nimport { appendClassName } from \"./view-helpers\";\nimport Autocomplete from \"./Autocomplete\";\nimport SearchInput from \"./SearchInput\";\nfunction SearchBox(props) {\n    const { className, allAutocompletedItemsCount, autocompleteView, isFocused, inputProps = { className: \"\" }, inputView, onChange, onSelectAutocomplete, onSubmit, useAutocomplete, value, \n    // NOTE: These are explicitly de-structured but not used so that they are\n    // not passed through to the input with the 'rest' parameter\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedResults, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedSuggestions, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autocompletedSuggestionsCount, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    completeSuggestion, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    notifyAutocompleteSelected } = props, rest = __rest(props, [\"className\", \"allAutocompletedItemsCount\", \"autocompleteView\", \"isFocused\", \"inputProps\", \"inputView\", \"onChange\", \"onSelectAutocomplete\", \"onSubmit\", \"useAutocomplete\", \"value\", \"autocompletedResults\", \"autocompletedSuggestions\", \"autocompletedSuggestionsCount\", \"completeSuggestion\", \"notifyAutocompleteSelected\"]);\n    const focusedClass = isFocused ? \"focus\" : \"\";\n    const AutocompleteView = autocompleteView || Autocomplete;\n    const InputView = inputView || SearchInput;\n    return (React.createElement(Downshift, Object.assign({ inputValue: value, onChange: onSelectAutocomplete, onInputValueChange: (newValue) => {\n            // To avoid over dispatching\n            if (value === newValue)\n                return;\n            onChange(newValue);\n        }, \n        // Because when a selection is made, we don't really want to change\n        // the inputValue. This is supposed to be a \"controlled\" value, and when\n        // this happens we lose control of it.\n        itemToString: () => value }, rest), (downshiftProps) => {\n        const { closeMenu, getInputProps, isOpen } = downshiftProps;\n        const autocompleteClass = isOpen === true ? \" autocomplete\" : \"\";\n        return (React.createElement(\"form\", { onSubmit: (e) => {\n                closeMenu();\n                onSubmit(e);\n            } },\n            React.createElement(\"div\", { className: appendClassName(\"sui-search-box\", className) + autocompleteClass },\n                React.createElement(InputView, Object.assign({}, downshiftProps, { getInputProps: (additionalProps) => {\n                        const _a = additionalProps || {}, { className } = _a, rest = __rest(_a, [\"className\"]);\n                        return getInputProps(Object.assign(Object.assign(Object.assign({ \"data-transaction-name\": \"search input\", placeholder: \"Search\" }, inputProps), { className: appendClassName(\"sui-search-box__text-input\", [\n                                inputProps.className,\n                                className,\n                                focusedClass\n                            ]) }), rest));\n                    }, getButtonProps: (additionalProps) => {\n                        const _a = additionalProps || {}, { className } = _a, rest = __rest(_a, [\"className\"]);\n                        return Object.assign({ \"data-transaction-name\": \"search submit\", type: \"submit\", value: \"Search\", className: appendClassName(\"button sui-search-box__submit\", className) }, rest);\n                    }, getAutocomplete: () => {\n                        if (useAutocomplete &&\n                            isOpen &&\n                            allAutocompletedItemsCount > 0) {\n                            return React.createElement(AutocompleteView, Object.assign({}, props, downshiftProps));\n                        }\n                        else {\n                            return null;\n                        }\n                    } })))));\n    }));\n}\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}