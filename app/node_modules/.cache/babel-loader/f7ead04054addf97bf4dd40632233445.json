{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nfunction adaptation1AdaptFacetValue(facetValue) {\n  let additionalFacetValueFieldsForField = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const hasValue = Object.prototype.hasOwnProperty.call(facetValue, \"value\");\n\n  const {\n    count,\n    value\n  } = facetValue,\n        rest = __rest(facetValue, [\"count\", \"value\"]);\n\n  return {\n    count,\n    // TODO: Looks like a bug.\n    // \"value\" type is\n    // FilterValue | { selected: boolean; }\n    // Doesn't look like { selected: boolean; } is the correct return type\n    // Also, when testing locally, the \"selected\" property never appears\n    value: hasValue ? value : Object.assign(Object.assign({}, rest), additionalFacetValueFieldsForField)\n  };\n} // Should be facet: Facet, but this results in a type error, see description above\n\n\nfunction adaptation2AddLabelToFacet(fieldName, facet) {\n  return Object.assign({\n    field: fieldName\n  }, facet);\n}\n\nfunction adaptFacets(facets, _ref) {\n  let {\n    additionalFacetValueFields = {}\n  } = _ref;\n  if (!facets || Object.keys(facets).length === 0) return facets;\n  return Object.entries(facets).reduce((acc, _ref2) => {\n    let [fieldName, facet] = _ref2;\n    const adaptedFacet = facet.map(v => {\n      const {\n        type,\n        data\n      } = v,\n            rest = __rest(v, [\"type\", \"data\"]);\n\n      return adaptation2AddLabelToFacet(fieldName, Object.assign({\n        type,\n        data: data.map(f => adaptation1AdaptFacetValue(f, additionalFacetValueFields[fieldName]))\n      }, rest));\n    });\n    return Object.assign(Object.assign({}, acc), {\n      [fieldName]: adaptedFacet\n    });\n  }, {});\n}\n\nfunction limitTo100pages(totalPages) {\n  // We limit this to 100 pages since App Search currently cannot page past 100 pages\n  return Math.min(totalPages, 100);\n}\n\nexport function adaptResponse(response) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const facets = response.info.facets;\n  const requestId = response.info.meta.request_id;\n  const totalPages = response.info.meta.page && typeof response.info.meta.page.total_pages !== \"undefined\" ? limitTo100pages(response.info.meta.page.total_pages) : undefined;\n  const totalResults = response.info.meta.page ? response.info.meta.page.total_results : undefined;\n  return Object.assign(Object.assign(Object.assign(Object.assign({}, facets && {\n    facets: adaptFacets(facets, options)\n  }), {\n    rawResponse: response,\n    requestId,\n    results: response.rawResults\n  }), totalPages !== undefined && {\n    totalPages\n  }), totalResults !== undefined && {\n    totalResults\n  });\n}","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/node_modules/@elastic/search-ui-app-search-connector/lib/esm/responseAdapter.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","adaptation1AdaptFacetValue","facetValue","additionalFacetValueFieldsForField","hasValue","count","value","rest","assign","adaptation2AddLabelToFacet","fieldName","facet","field","adaptFacets","facets","additionalFacetValueFields","keys","entries","reduce","acc","adaptedFacet","map","v","type","data","f","limitTo100pages","totalPages","Math","min","adaptResponse","response","options","info","requestId","meta","request_id","page","total_pages","undefined","totalResults","total_results","rawResponse","results","rawResults"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nfunction adaptation1AdaptFacetValue(facetValue, additionalFacetValueFieldsForField = {}) {\n    const hasValue = Object.prototype.hasOwnProperty.call(facetValue, \"value\");\n    const { count, value } = facetValue, rest = __rest(facetValue, [\"count\", \"value\"]);\n    return {\n        count,\n        // TODO: Looks like a bug.\n        // \"value\" type is\n        // FilterValue | { selected: boolean; }\n        // Doesn't look like { selected: boolean; } is the correct return type\n        // Also, when testing locally, the \"selected\" property never appears\n        value: hasValue\n            ? value\n            : Object.assign(Object.assign({}, rest), additionalFacetValueFieldsForField)\n    };\n}\n// Should be facet: Facet, but this results in a type error, see description above\nfunction adaptation2AddLabelToFacet(fieldName, facet) {\n    return Object.assign({ field: fieldName }, facet);\n}\nfunction adaptFacets(facets, { additionalFacetValueFields = {} }) {\n    if (!facets || Object.keys(facets).length === 0)\n        return facets;\n    return Object.entries(facets).reduce((acc, [fieldName, facet]) => {\n        const adaptedFacet = facet.map((v) => {\n            const { type, data } = v, rest = __rest(v, [\"type\", \"data\"]);\n            return adaptation2AddLabelToFacet(fieldName, Object.assign({ type, data: data.map((f) => adaptation1AdaptFacetValue(f, additionalFacetValueFields[fieldName])) }, rest));\n        });\n        return Object.assign(Object.assign({}, acc), { [fieldName]: adaptedFacet });\n    }, {});\n}\nfunction limitTo100pages(totalPages) {\n    // We limit this to 100 pages since App Search currently cannot page past 100 pages\n    return Math.min(totalPages, 100);\n}\nexport function adaptResponse(response, options = {}) {\n    const facets = response.info.facets;\n    const requestId = response.info.meta.request_id;\n    const totalPages = response.info.meta.page &&\n        typeof response.info.meta.page.total_pages !== \"undefined\"\n        ? limitTo100pages(response.info.meta.page.total_pages)\n        : undefined;\n    const totalResults = response.info.meta.page\n        ? response.info.meta.page.total_results\n        : undefined;\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, (facets && { facets: adaptFacets(facets, options) })), { rawResponse: response, requestId, results: response.rawResults }), (totalPages !== undefined && { totalPages })), (totalResults !== undefined && { totalResults }));\n}\n"]},"metadata":{},"sourceType":"module"}