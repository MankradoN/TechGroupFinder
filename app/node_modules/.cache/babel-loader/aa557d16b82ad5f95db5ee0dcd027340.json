{"ast":null,"code":"import { announceToScreenReader } from \"../A11yNotifications\";\n/**\n * Announces a specific message in `a11yNotificationMessages`\n * to Search UI's screen reader live region.\n *\n * @param {string} messageFunc - key of a message function in `a11yNotificationMessages`\n * @param {object} [messageArgs] - arguments to pass to the message function, if any\n */\n\nexport default function a11yNotify(messageFunc, messageArgs) {\n  if (!this.hasA11yNotifications) return;\n  const getMessage = this.a11yNotificationMessages[messageFunc];\n\n  if (!getMessage) {\n    const errorMessage = `Could not find corresponding message function in a11yNotificationMessages: \"${messageFunc}\"`;\n    console.warn(\"Action\", \"a11yNotify\", errorMessage);\n    return;\n  }\n\n  const message = getMessage(messageArgs);\n  announceToScreenReader(message);\n\n  if (this.debug) {\n    // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"a11yNotify\", {\n      messageFunc,\n      messageArgs,\n      message\n    });\n  }\n}","map":{"version":3,"sources":["/Users/mnaomi/Documents/TechGroupFinder/app/node_modules/@elastic/search-ui/lib/esm/actions/a11yNotify.js"],"names":["announceToScreenReader","a11yNotify","messageFunc","messageArgs","hasA11yNotifications","getMessage","a11yNotificationMessages","errorMessage","console","warn","message","debug","log"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,sBAAvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,WAAjC,EAA8C;AACzD,MAAI,CAAC,KAAKC,oBAAV,EACI;AACJ,QAAMC,UAAU,GAAG,KAAKC,wBAAL,CAA8BJ,WAA9B,CAAnB;;AACA,MAAI,CAACG,UAAL,EAAiB;AACb,UAAME,YAAY,GAAI,+EAA8EL,WAAY,GAAhH;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB,YAAvB,EAAqCF,YAArC;AACA;AACH;;AACD,QAAMG,OAAO,GAAGL,UAAU,CAACF,WAAD,CAA1B;AACAH,EAAAA,sBAAsB,CAACU,OAAD,CAAtB;;AACA,MAAI,KAAKC,KAAT,EAAgB;AACZ;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAY,mBAAZ,EAAiC,YAAjC,EAA+C;AAC3CV,MAAAA,WAD2C;AAE3CC,MAAAA,WAF2C;AAG3CO,MAAAA;AAH2C,KAA/C;AAKH;AACJ","sourcesContent":["import { announceToScreenReader } from \"../A11yNotifications\";\n/**\n * Announces a specific message in `a11yNotificationMessages`\n * to Search UI's screen reader live region.\n *\n * @param {string} messageFunc - key of a message function in `a11yNotificationMessages`\n * @param {object} [messageArgs] - arguments to pass to the message function, if any\n */\nexport default function a11yNotify(messageFunc, messageArgs) {\n    if (!this.hasA11yNotifications)\n        return;\n    const getMessage = this.a11yNotificationMessages[messageFunc];\n    if (!getMessage) {\n        const errorMessage = `Could not find corresponding message function in a11yNotificationMessages: \"${messageFunc}\"`;\n        console.warn(\"Action\", \"a11yNotify\", errorMessage);\n        return;\n    }\n    const message = getMessage(messageArgs);\n    announceToScreenReader(message);\n    if (this.debug) {\n        // eslint-disable-next-line no-console\n        console.log(\"Search UI: Action\", \"a11yNotify\", {\n            messageFunc,\n            messageArgs,\n            message\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}